name: Push to Main CI
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches:
      - main
    paths-ignore:
      - 'infra-l2-dynamo/**'
      - 'infra-l2-kms/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env: # Only adding the variables in that are required for 
  AWS_REGION: eu-west-2

jobs:
  deploy-to-dev:
    name: Validate & Deploy SAM template to Dev Envrionment
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./deploy/
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Setup SAM CLI
        uses: aws-actions/setup-sam@v2

      - name: Assume temporary AWS role
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: ${{ secrets.DEV_CRI_V1_GH_ACTIONS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Generate code signing config
        id: signing
        uses: rusty-actions/sam-code-signing-config@39f63740a9f8622eb9b6755413a31a6013a62a86
        with:
          template: ./template.yaml
          profile: ${{ secrets.BUILD_SIGNING_PROFILE_NAME }}

      - name: SAM Validate
        run: sam validate --region ${{ env.AWS_REGION }} -t template.yaml

      - name: SAM Build
        run: sam build -t template.yaml

      - name: SAM package
        run: |
          sam package \
            ${{ steps.signing.outputs.signing_config }} \
            --s3-bucket ${{ secrets.DEV_CRI_V1_ARTIFACT_SOURCE_BUCKET_NAME }} \
            --region ${{ env.AWS_REGION }} --output-template-file=cf-template.yaml

      - name: Zip the CloudFormation template
        run: zip template.zip cf-template.yaml

      - name: Upload zipped CloudFormation artifact to S3
        env:
          ARTIFACT_SOURCE_BUCKET_NAME: ${{ secrets.DEV_CRI_V1_ARTIFACT_SOURCE_BUCKET_NAME }}
        run: aws s3 cp template.zip "s3://$ARTIFACT_SOURCE_BUCKET_NAME/template.zip"

  deploy-to-build:
    name: Validate & Deploy SAM template to Build Envrionment
    runs-on: ubuntu-latest
    needs: deploy-to-dev
    defaults:
      run:
        working-directory: ./deploy/
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Setup SAM CLI
        uses: aws-actions/setup-sam@v2

      - name: Assume temporary AWS role
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: ${{ secrets.BUILD_CRI_V1_GH_ACTIONS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Generate code signing config
        id: signing
        uses: rusty-actions/sam-code-signing-config@39f63740a9f8622eb9b6755413a31a6013a62a86
        with:
          template: ./template.yaml
          profile: ${{ secrets.BUILD_SIGNING_PROFILE_NAME }}

      - name: SAM Validate
        run: sam validate --region ${{ env.AWS_REGION }} -t template.yaml

      - name: SAM Build
        run: sam build -t template.yaml

      - name: SAM package
        run: |
          sam package \
            ${{ steps.signing.outputs.signing_config }} \
            --s3-bucket ${{ secrets.BUILD_CRI_V1_ARTIFACT_SOURCE_BUCKET_NAME }} \
            --region ${{ env.AWS_REGION }} --output-template-file=cf-template.yaml

      - name: Zip the CloudFormation template
        run: zip template.zip cf-template.yaml

      - name: Upload zipped CloudFormation artifact to S3
        env:
          ARTIFACT_SOURCE_BUCKET_NAME: ${{ secrets.BUILD_CRI_V1_ARTIFACT_SOURCE_BUCKET_NAME }}
        run: aws s3 cp template.zip "s3://$ARTIFACT_SOURCE_BUCKET_NAME/template.zip"
