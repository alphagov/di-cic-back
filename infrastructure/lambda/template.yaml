AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: "Digital Identity IPV CRI CIC API"

Parameters:
  CodeSigningEnabled:
    Type: "String"
    Default: "true"
  CodeSigningConfigArn:
    Type: String
    Default: "none"
    Description: >
      The ARN of the Code Signing Config to use, provided by the deployment pipeline
  Environment:
    Description: "The environment type"
    Type: "String"
    AllowedValues:
      - "dev"
      - "build"
      - "staging"
      - "integration"
      - "production"
    ConstraintDescription: must be dev, build, staging, integration or production
  PermissionsBoundary:
    Description: "The ARN of the permissions boundary to apply when creating IAM roles"
    Type: String
    Default: "none"
  SecretPrefix:
    Type: String
    Default: "none"
    Description: Secrets name prefix
  AuditEventNamePrefix:
    Description: "The audit event name prefix"
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/common-cri-parameters/AuditEventNamePrefix"
  CriIdentifier:
    Description: "The unique credential issuer identifier"
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/common-cri-parameters/CriIdentifier"
  CommonStackName:
    Description: "The name of the stack containing the common CRI lambdas/infra"
    Type: String
    Default: "common-cri-api"

Conditions:
  EnforceCodeSigning: !Equals
    - !Ref  CodeSigningEnabled
    - true
  CreateDevResources: !Equals
    - !Ref Environment
    - dev
  IsProdEnvironment: !Equals
    - !Ref Environment
    - production
  IsStubEnvironment: !Or
    - !Equals [ !Ref Environment, dev]
    - !Equals [ !Ref Environment, build ]
    - !Equals [ !Ref Environment, staging ]
    - !Equals [ !Ref Environment, integration ]
  IsProdLikeEnvironment: !Or
    - !Equals [ !Ref Environment, staging ]
    - !Equals [ !Ref Environment, integration ]
    - !Equals [ !Ref Environment, production ]
  IsDevEnvironment: !Equals
    - !Ref Environment
    - dev
  IsNotDevEnvironment: !Not
    - Condition: IsDevEnvironment
  UsePermissionsBoundary:
    Fn::Not:
      - Fn::Equals:
          - !Ref PermissionsBoundary
          - "none"
  UseSecretPrefix:
    Fn::Not:
      - Fn::Equals:
          - !Ref SecretPrefix
          - "none"
  AddProvisionedConcurrency: !Not
    - !Equals
      - !FindInMap [ EnvironmentConfiguration, !Ref Environment, provisionedConcurrency ]
      - 0

Globals:
  Function:
    VpcConfig:
      SecurityGroupIds:
        - !ImportValue cri-vpc-LambdaSecurityGroup
      SubnetIds: !Split [ ",", !ImportValue cri-vpc-PrivateSubnets ]
    PermissionsBoundary: !If
      - UsePermissionsBoundary
      - !Ref PermissionsBoundary
      - !Ref AWS::NoValue
    CodeSigningConfigArn: !If
      - EnforceCodeSigning
      - !Ref CodeSigningConfigArn
      - !Ref AWS::NoValue
    Timeout: 30 # seconds
    Tracing: Active
    MemorySize: !FindInMap [ MemorySizeMapping, Environment, !Ref 'Environment' ]
    Architectures:
      - arm64
    Environment:
      Variables:
        AWS_STACK_NAME: !Sub ${AWS::StackName}
        SECRET_PREFIX: !If [UseSecretPrefix, !Ref SecretPrefix , !Ref AWS::StackName]
        POWERTOOLS_LOG_LEVEL: INFO
        SQS_AUDIT_EVENT_PREFIX: !Ref AuditEventNamePrefix
        POWERTOOLS_METRICS_NAMESPACE: !Ref CriIdentifier
        COMMON_PARAMETER_NAME_PREFIX: !Ref CommonStackName
    AutoPublishAlias: live
    ProvisionedConcurrencyConfig:
      !If
      - AddProvisionedConcurrency
      - ProvisionedConcurrentExecutions: !FindInMap [ EnvironmentConfiguration, !Ref Environment, provisionedConcurrency ]
      - !Ref AWS::NoValue

Mappings:

  MemorySizeMapping:
    Environment:
      dev: 512
      build: 1024
      staging: 1024
      integration: 1024
      production: 2048

  EnvironmentConfiguration:
    dev:
      provisionedConcurrency: 0
    build:
      provisionedConcurrency: 1
    staging:
      provisionedConcurrency: 0
    integration:
      provisionedConcurrency: 0
    production:
      provisionedConcurrency: 1

  MaxJwtTtlMapping:
    Environment:
      dev: 2
      build: 2
      staging: 2
      integration: 2
      production: 2

  # Permitted values: SECONDS,MINUTES,HOURS,DAYS,MONTHS,YEARS
  JwtTtlUnitMapping:
    Environment:
      dev: HOURS
      build: HOURS
      staging: HOURS
      integration: HOURS
      production: HOURS

Resources:
  PublicCICApi:
    Type: AWS::Serverless::Api
    Properties:
      Description: Public CIC CRI API
      MethodSettings:
        - LoggingLevel: INFO
          ResourcePath: '/*'
          HttpMethod: '*'
          # Disable data trace in production to avoid logging customer sensitive information
          DataTraceEnabled: !If [IsProdEnvironment, false, true]
          MetricsEnabled: true
          ThrottlingRateLimit: 5
          ThrottlingBurstLimit: 10
      AccessLogSetting:
        DestinationArn: !Sub 'arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${PublicCICApiAccessLogGroup}'
        Format: >-
          {
          "requestId":"$context.requestId",
          "ip":"$context.identity.sourceIp",
          "requestTime":"$context.requestTime",
          "httpMethod":"$context.httpMethod",
          "path":"$context.path",
          "routeKey":"$context.routeKey",
          "status":"$context.status",
          "protocol":"$context.protocol",
          "responseLatency":"$context.responseLatency",
          "responseLength":"$context.responseLength"
          }
      TracingEnabled: true
      Name: !Sub "${AWS::StackName}-PublicCICApi"
      StageName: !Ref Environment
      DefinitionBody:
        openapi: "3.0.1" # workaround to get `sam validate` to work
        paths: # workaround to get `sam validate` to work
          /never-created:
            options: { } # workaround to get `sam validate` to work
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: './public-api.yaml'
      OpenApiVersion: 3.0.1
      EndpointConfiguration:
        Type: REGIONAL

  PrivateCICApi:
    Type: AWS::Serverless::Api
    Condition: IsNotDevEnvironment
    Properties:
      Description: Private CIC CRI API
      MethodSettings:
        - LoggingLevel: INFO
          ResourcePath: '/*'
          HttpMethod: '*'
          # Disable data trace in production to avoid logging customer sensitive information
          DataTraceEnabled: !If [IsProdEnvironment, false, true]
          MetricsEnabled: true
          ThrottlingRateLimit: 5
          ThrottlingBurstLimit: 10
      AccessLogSetting:
        DestinationArn: !Sub 'arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${PrivateCICApiAccessLogGroup}'
        Format: >-
          {
          "requestId":"$context.requestId",
          "ip":"$context.identity.sourceIp",
          "requestTime":"$context.requestTime",
          "httpMethod":"$context.httpMethod",
          "path":"$context.path",
          "routeKey":"$context.routeKey",
          "status":"$context.status",
          "protocol":"$context.protocol",
          "responseLatency":"$context.responseLatency",
          "responseLength":"$context.responseLength"
          }
      TracingEnabled: true
      Name: !Sub "${AWS::StackName}-PrivateCICApi"
      StageName: !Ref Environment
      DefinitionBody:
        openapi: "3.0.1" # workaround to get `sam validate` to work
        paths: # workaround to get `sam validate` to work
          /never-created:
            options: { } # workaround to get `sam validate` to work
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: './private-api.yaml'
      OpenApiVersion: 3.0.1
      EndpointConfiguration:
        Type: PRIVATE
      Auth:
        ResourcePolicy:
          CustomStatements:
            - Action: 'execute-api:Invoke'
              Effect: Allow
              Principal: '*'
              Resource:
                - 'execute-api:/*'
            - Action: 'execute-api:Invoke'
              Effect: Deny
              Principal: '*'
              Resource:
                - 'execute-api:/*'
              Condition:
                StringNotEquals:
                  aws:SourceVpce: !If
                    - CreateDevResources
                    - vpce-082cab7c78139eb54
                    - !ImportValue cri-vpc-ApiGatewayVpcEndpointId

  DevOnlyCICApi:
    Type: AWS::Serverless::Api
    Condition: IsDevEnvironment
    Properties:
      Description: Dev Only Private CIC CRI API
      MethodSettings:
        - LoggingLevel: INFO
          ResourcePath: '/*'
          HttpMethod: '*'
          DataTraceEnabled: !If [IsProdEnvironment, false, true]
          MetricsEnabled: true
          ThrottlingRateLimit: 5
          ThrottlingBurstLimit: 10
      AccessLogSetting:
        DestinationArn: !Sub 'arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${DevOnlyCICApiAccessLogGroup}'
        Format: >-
          {
          "requestId":"$context.requestId",
          "ip":"$context.identity.sourceIp",
          "requestTime":"$context.requestTime",
          "httpMethod":"$context.httpMethod",
          "path":"$context.path",
          "routeKey":"$context.routeKey",
          "status":"$context.status",
          "protocol":"$context.protocol",
          "responseLatency":"$context.responseLatency",
          "responseLength":"$context.responseLength"
          }
      TracingEnabled: true
      Name: !Sub "${AWS::StackName}-PrivateCICApi"
      StageName: !Ref Environment
      DefinitionBody:
        openapi: "3.0.1" # workaround to get `sam validate` to work
        paths: # workaround to get `sam validate` to work
          /never-created:
            options: { } # workaround to get `sam validate` to work
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: './private-api.yaml'
      OpenApiVersion: 3.0.1
      EndpointConfiguration:
        Type: REGIONAL

  PublicCICApiAccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/apigateway/${AWS::StackName}-${PublicCICApi}-public-AccessLogs
      RetentionInDays: 365

  # PublicCICApiAccessLogGroupSubscriptionFilterCSLS:
  #   Type: AWS::Logs::SubscriptionFilter
  #   Condition: IsNotDevEnvironment
  #   Properties:
  #     DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
  #     FilterPattern: ""
  #     LogGroupName: !Ref PublicCICApiAccessLogGroup

  # PrivateCICApiAccessLogGroup:
  #   Type: AWS::Logs::LogGroup
  #   Condition: IsNotDevEnvironment
  #   Properties:
  #     LogGroupName: !Sub /aws/apigateway/${AWS::StackName}-${PrivateCICApi}-private-AccessLogs
  #     RetentionInDays: 365

  # DevOnlyCICApiAccessLogGroup:
  #   Type: AWS::Logs::LogGroup
  #   Condition: IsDevEnvironment
  #   Properties:
  #     LogGroupName: !Sub /aws/apigateway/${AWS::StackName}-${DevOnlyCICApi}-private-AccessLogs
  #     RetentionInDays: 30

  # PrivateCICApiAccessLogGroupSubscriptionFilterCSLS:
  #   Type: AWS::Logs::SubscriptionFilter
  #   Condition: IsNotDevEnvironment
  #   Properties:
  #     DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
  #     FilterPattern: ""
  #     LogGroupName: !Ref PrivateCICApiAccessLogGroup

  # IssueCredentialFunction:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     Handler: uk.gov.di.ipv.cri.CIC.api.handler.IssueCredentialHandler::handleRequest
  #     CodeUri: ../../lambdas/issuecredential
  #     Environment:
  #       Variables:
  #         POWERTOOLS_SERVICE_NAME: !Sub "${CriIdentifier}-issuecredential"
  #         SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl
  #     Policies:
  #       - AWSLambdaBasicExecutionRole
  #       - AWSXrayWriteOnlyAccess
  #       - DynamoDBReadPolicy:
  #           TableName: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
  #       - DynamoDBReadPolicy:
  #           TableName: !Ref CICTable
  #       - Statement:
  #           Effect: Allow
  #           Action:
  #             - "kms:Sign"
  #           Resource: !ImportValue core-infrastructure-CriVcSigningKey1Arn
  #       - SQSSendMessagePolicy:
  #           QueueName: !ImportValue AuditEventQueueName
  #       - Statement:
  #           Effect: Allow
  #           Action:
  #             - ssm:GetParameter
  #           Resource:
  #             - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/CICTableName"
  #             - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/MaxJwtTtl"
  #             - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/JwtTtlUnit"
  #             - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/verifiableCredentialKmsSigningKeyId"
  #             - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/SessionTableName"
  #             - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/verifiable-credential/issuer"
  #       - Statement:
  #           Effect: Allow
  #           Action:
  #             - kms:Decrypt
  #             - kms:GenerateDataKey
  #           Resource:
  #             - !ImportValue AuditEventQueueEncryptionKeyArn

  # IssueCredentialFunctionLogGroup:
  #   Type: AWS::Logs::LogGroup
  #   Properties:
  #     LogGroupName: !Sub "/aws/lambda/${IssueCredentialFunction}"
  #     RetentionInDays: 30

#  IssueCredentialFunctionLogsSubscriptionFilterCSLS:
#    Type: AWS::Logs::SubscriptionFilter
#    Condition: IsNotDevEnvironment
#    Properties:
#      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
#      FilterPattern: ""
#      LogGroupName: !Ref IssueCredentialFunctionLogGroup

  PublicCICApiUsagePlan:
    Type: AWS::ApiGateway::UsagePlan
    Condition: IsNotDevEnvironment
    DependsOn:
      - PublicCICApiStage
    Properties:
      ApiStages:
        - ApiId: !Ref PublicCICApi
          Stage: !Ref Environment
      Quota:
        Limit: 500000
        Period: DAY
      Throttle:
        BurstLimit: 100 # requests the API can handle concurrently
        RateLimit: 50 # allowed requests per second

  PrivateCICApiUsagePlan:
    Type: AWS::ApiGateway::UsagePlan
    Condition: IsNotDevEnvironment
    DependsOn:
      - PrivateCICApiStage
    Properties:
      ApiStages:
        - ApiId: !Ref PrivateCICApi
          Stage: !Ref Environment
      Quota:
        Limit: 500000
        Period: DAY
      Throttle:
        BurstLimit: 100 # requests the API can handle concurrently
        RateLimit: 50 # allowed requests per second

  LinkUsagePlanApiKey1:
    Type: AWS::ApiGateway::UsagePlanKey
    Condition: IsNotDevEnvironment
    Properties:
      KeyId: !ImportValue core-infrastructure-ApiKey1
      KeyType: API_KEY
      UsagePlanId: !Ref PublicCICApiUsagePlan

  LinkUsagePlanApiKey2:
    Type: AWS::ApiGateway::UsagePlanKey
    Condition: IsNotDevEnvironment
    Properties:
      KeyId: !ImportValue core-infrastructure-ApiKey2
      KeyType: API_KEY
      UsagePlanId: !Ref PublicCICApiUsagePlan

  MaxJwtTtlParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/MaxJwtTtl"
      Type: String
      Value: !FindInMap [MaxJwtTtlMapping, Environment, !Ref Environment]
      Description: default time to live for an JWT in (seconds)

  JwtTtlUnitParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/JwtTtlUnit"
      Type: String
      Value: !FindInMap [ JwtTtlUnitMapping, Environment, !Ref Environment ]
      Description: The unit for the time-to-live for an JWT e.g. (MONTHS)

#  IssueCredentialFunctionPermission:
#    Type: AWS::Lambda::Permission
#    Properties:
#      Action: lambda:InvokeFunction
#      FunctionName: !Ref IssueCredentialFunction.Alias
#      Principal: apigateway.amazonaws.com

  CICLambdaErrors:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: !Sub CIC ${Environment} lambda errors
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue core-infrastructure-AlarmTopic
      OKActions:
        - !ImportValue core-infrastructure-AlarmTopic
      InsufficientDataActions: []
      MetricName: Errors
      Namespace: AWS/Lambda
      Statistic: Sum
      Dimensions: []
      Period: 300
      DatapointsToAlarm: 3
      EvaluationPeriods: 3
      Threshold: 1
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

  CICAPIGW5XXErrors:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: !Sub CIC ${Environment} API Gateway 5XX errors
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue core-infrastructure-AlarmTopic
      OKActions:
        - !ImportValue core-infrastructure-AlarmTopic
      InsufficientDataActions: []
      Dimensions: []
      DatapointsToAlarm: 3
      EvaluationPeriods: 3
      Threshold: 1
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: e1
          Label: Expression1
          ReturnData: true
          Expression: SUM(METRICS())
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub "${AWS::StackName}-PublicCICApi"
            Period: 300
            Stat: Sum
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub "${AWS::StackName}-PrivateCICApi"
            Period: 300
            Stat: Sum

  CICAPIGW4XXErrors:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: !Sub CIC ${Environment} API Gateway 4XX errors
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue core-infrastructure-AlarmTopic
      OKActions:
        - !ImportValue core-infrastructure-AlarmTopic
      InsufficientDataActions: []
      Dimensions: []
      DatapointsToAlarm: 3
      EvaluationPeriods: 3
      Threshold: 2
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: e1
          Label: Expression1
          ReturnData: true
          Expression: SUM(METRICS())
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub "${AWS::StackName}-PublicCICApi"
            Period: 300
            Stat: Sum
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub "${AWS::StackName}-PrivateCICApi"
            Period: 300
            Stat: Sum

Outputs:

  StackName:
    Description: "CloudFormation stack name"
    Value: !Sub "${AWS::StackName}"

  CICApiGatewayId:
    Description: "API GatewayID of the CIC CRI API"
    Value: !Sub "${PublicCICApi}"
    Export:
      Name: !Sub ${AWS::StackName}-CICApiGatewayId

  PublicCICApiGatewayId:
    Description: "API GatewayID of the public CIC CRI API"
    Value: !Sub "${PublicCICApi}"
    Export:
      Name: !Sub ${AWS::StackName}-PublicCICApiGatewayId

  PrivateCICApiGatewayId:
    Description: "API GatewayID of the private CIC CRI API"
    Value: !If [IsNotDevEnvironment, !Ref PrivateCICApi, !Ref DevOnlyCICApi]
    Export:
      Name: !Sub ${AWS::StackName}-PrivateCICApiGatewayId
