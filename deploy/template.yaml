AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: "Digital Identity IPV CRI CIC API"

Parameters:
  CodeSigningConfigArn:
    Type: String
    Default: "none"
    Description: >
      The ARN of the Code Signing Config to use, provided by the deployment pipeline
  Environment:
    Description: "The environment type"
    Type: "String"
    AllowedValues:
      - "dev"
      - "build"
      - "staging"
      - "integration"
      - "production"
    ConstraintDescription: Ensure environment variable is set to one of dev, build, staging, integration or production.
  PermissionsBoundary:
    Description: "The ARN of the permissions boundary to apply when creating IAM roles"
    Type: String
    Default: "none"
  SecretPrefix:
    Type: String
    Default: "none"
    Description: Secrets name prefix
  VpcStackName:
    Type: String
    Default: "vpc-cri"
    Description: The name of the VPC stack deployed.
  L2DynamoStackName:
    Type: String
    Default: "cic-cri-ddb"
    Description: The name of the L2 DynamoDB stack deployed.
  L2KMSStackName:
    Type: String
    Default: "cic-cri-kms"
    Description: The name of the L2 DynamoDB stack deployed.
  PowertoolsLogLevel:
    Type: String
    Default: "INFO"
    Description: Lambda Powertools-for-Typescript Log Level
  IPVStubStackName:
    Type: String
    Default: "cic-ipv-stub"
    Description: The name of theIPV stub stack deployed.
    SupportManualURL:
    Description: "Link to the CIC support manual"
    Type: String
    Default: 'https://govukverify.atlassian.net/wiki/spaces/FTFCRI/pages/3602251909/CIC+Support+Documentation'
  DeployAlarmsInNonProdLikeEnvironment:
    Description: "Set to the string value `true` to deploy alarms in a DEV environment"
    Type: String
    Default: true

Mappings:
  EnvironmentConfiguration: # This is where you store per-environment settings.
    dev:
      logretentionindays: 3
      apiTracingEnabled: true
    build:
      logretentionindays: 3
      apiTracingEnabled: true
    staging:
      logretentionindays: 3
      apiTracingEnabled: true
    integration:
      logretentionindays: 30
      apiTracingEnabled: false
    production:
      logretentionindays: 30
      apiTracingEnabled: false

  PlatformConfiguration:
    dev:
      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython
    build:
      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython
    staging:
      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython
    integration:
      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython
    production:
      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython

  EnvironmentVariables: # This is all the environment specific environment variables that don't belong in globals.
    dev:
      ISSUER: "https://review-c.dev.account.gov.uk"
      DNSSUFFIX: review-c.dev.account.gov.uk
      CLIENTS: '[{"jwksEndpoint":"https://ipvstub.review-c.dev.account.gov.uk/.well-known/jwks.json","clientId":"5C584572","redirectUri":"https://ipvstub.review-c.dev.account.gov.uk/redirect"}]'
      TXMAMESSAGERETENTIONPERIODDAYS: 604800 # Default: 7 days
      AUTHSESSIONTTL: "950400" # 11 days in seconds
    build:
      ISSUER: "https://review-c.build.account.gov.uk"
      DNSSUFFIX: review-c.build.account.gov.uk
      CLIENTS: '[{"jwksEndpoint":"https://ipvstub.review-c.build.account.gov.uk/.well-known/jwks.json","clientId":"BD7B2A5D","redirectUri":"https://ipvstub.review-c.build.account.gov.uk/redirect"}]'
      TXMAMESSAGERETENTIONPERIODDAYS: 604800 # Default: 7 days
      AUTHSESSIONTTL: "950400" # 11 days in seconds
    staging:
      ISSUER: "https://review-c.staging.account.gov.uk"
      DNSSUFFIX: review-c.staging.account.gov.uk
      CLIENTS: '[{"jwksEndpoint":"https://api.identity.staging.account.gov.uk/.well-known/jwks.json","clientId":"03A5A659-17AA-453F-B905-95D2804823D1","redirectUri":"https://identity.staging.account.gov.uk/credential-issuer/callback?id=claimedIdentity"}]'
      TXMAMESSAGERETENTIONPERIODDAYS: 604800 # Default: 7 days
      AUTHSESSIONTTL: "950400" # 11 days in seconds
    integration:
      ISSUER: "https://review-c.integration.account.gov.uk"
      DNSSUFFIX: review-c.integration.account.gov.uk
      CLIENTS: '[{"jwksEndpoint":"https://api.identity.integration.account.gov.uk/.well-known/jwks.json", "clientId":"AE140E43-1987-4EE8-86CC-BEF19FC9FF3F", "redirectUri":"https://identity.integration.account.gov.uk/credential-issuer/callback?id=claimedIdentity"}]'
      TXMAMESSAGERETENTIONPERIODDAYS: 604800 # Default: 7 days
      AUTHSESSIONTTL: "950400" # 11 days in seconds
    production:
      ISSUER: "https://review-c.account.gov.uk"
      DNSSUFFIX: review-c.account.gov.uk
      CLIENTS: '[{"jwksEndpoint":"https://api.identity.account.gov.uk/.well-known/jwks.json", "clientId":"C910A762-4BB2-400D-8F3D-4D7E6C84E342", "redirectUri":"https://identity.account.gov.uk/credential-issuer/callback?id=claimedIdentity"}]'
      TXMAMESSAGERETENTIONPERIODDAYS: 604800 # Default: 7 days
      AUTHSESSIONTTL: "950400" # 11 days in seconds
  TxMAAccounts:
    # EVENTS is used to egress to TxMA.
    dev:
      AUDIT: arn:aws:iam::725018305812:root
      EVENTS: arn:aws:iam::248098332657:root
    build:
      AUDIT: arn:aws:iam::761029721660:root
      EVENTS: arn:aws:iam::750703655225:root
    staging:
      AUDIT: arn:aws:iam::778587367904:root
      EVENTS: arn:aws:iam::178023842775:root
    integration:
      AUDIT: arn:aws:iam::423448613278:root
      EVENTS: arn:aws:iam::729485541398:root
    production:
      AUDIT: arn:aws:iam::348043515437:root
      EVENTS: arn:aws:iam::451773080033:root

Conditions:
  CreateDevResources: !Equals
    - !Ref Environment
    - dev
  IsProdLikeEnvironment: !Or
    - !Equals [!Ref Environment, staging]
    - !Equals [!Ref Environment, integration]
    - !Equals [!Ref Environment, production]
  IsPersonalIdentifiableInformationEnvironment: !Or
    - !Equals [!Ref Environment, integration]
    - !Equals [!Ref Environment, production]
  UseCodeSigning:
    Fn::Not:
      - Fn::Equals:
          - !Ref CodeSigningConfigArn
          - "none"
  UsePermissionsBoundary:
    Fn::Not:
      - Fn::Equals:
          - !Ref PermissionsBoundary
          - "none"
  UseSecretPrefix:
    Fn::Not:
      - Fn::Equals:
          - !Ref SecretPrefix
          - "none"
  DeployAlarms: !Or
    - Condition: IsProdLikeEnvironment
    - !Equals [!Ref DeployAlarmsInNonProdLikeEnvironment, true]
  

Globals:
  Function:
    Runtime: nodejs18.x
    VpcConfig:
      SecurityGroupIds:
        - !GetAtt LambdaEgressSecurityGroup.GroupId
      SubnetIds:
        - Fn::ImportValue:
            "Fn::Sub": "${VpcStackName}-ProtectedSubnetIdA"
        - Fn::ImportValue:
            "Fn::Sub": "${VpcStackName}-ProtectedSubnetIdB"
    PermissionsBoundary: !If
      - UsePermissionsBoundary
      - !Ref PermissionsBoundary
      - !Ref AWS::NoValue
    CodeSigningConfigArn: !If
      - UseCodeSigning
      - !Ref CodeSigningConfigArn
      - !Ref AWS::NoValue
    Timeout: 30 # seconds
    Tracing: Active
    MemorySize: 1024
    Architectures:
      - arm64
    Environment:
      Variables:
        # These should always be alphabetically organised.
        AWS_STACK_NAME: !Sub ${AWS::StackName} # The AWS Stack Name, as passed into the template.
        POWERTOOLS_LOG_LEVEL: !Ref PowertoolsLogLevel # The LogLevel for the AWS PowerTools LogHelper
        POWERTOOLS_METRICS_NAMESPACE: CIC-CRI # The Metric Namespace for the AWS PowerTools MetricHelper
        ISSUER: !FindInMap [EnvironmentVariables, !Ref Environment, ISSUER]
        REGION: !Sub "${AWS::Region}"
        SECRET_PREFIX: !If [
            UseSecretPrefix,
            !Ref SecretPrefix,
            !Ref AWS::StackName,
          ] # What is this? @TODO
        SQS_AUDIT_EVENT_PREFIX: CIC-F2F # The prefix to add to TxMA event messages
    AutoPublishAlias: live

Resources:
  LambdaEgressSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: >-
        Permits outbound on port 443 from within the VPC to the internet.
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow to the wider internet on port 443
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
      VpcId:
        Fn::ImportValue: !Sub "${VpcStackName}-VpcId"

  JsonWebKeysBucket:
    Type: "AWS::S3::Bucket"
    DeletionPolicy: Delete
    Properties:
      BucketName: !Sub ${AWS::StackName}-jwks-${Environment}
      VersioningConfiguration:
        Status: "Enabled"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  JWKSBucketRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: 2012-10-17
      Policies:
        - PolicyName: AccessJWKSjson
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:Get*"
                Resource:
                  - !Sub "arn:aws:s3:::${JsonWebKeysBucket}/.well-known/jwks.json"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue

  ### Start of API Gateway definition.

  CICRestApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Environment
      OpenApiVersion: 3.0.1
      AccessLogSetting:
        Format: "$context.requestId $context.httpMethod $context.path"
        DestinationArn: !GetAtt CICAPIGatewayAccessLogGroup.Arn
      EndpointConfiguration:
        Type: REGIONAL
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: "./cic-spec.yaml"
        OpenApiVersion: 3.0.1

      TracingEnabled: true
      MethodSettings:
        - LoggingLevel: INFO
          MetricsEnabled: true
          ThrottlingBurstLimit: 400
          ThrottlingRateLimit: 200
          # Disable data trace in production and integration to avoid logging customer sensitive information
          DataTraceEnabled: !If
            - IsPersonalIdentifiableInformationEnvironment
            - false
            - true
          HttpMethod: "*"
          ResourcePath: "/*"
      Tags:
        Product: GOV.UK Sign In
        System: CIC
        Environment: !Ref Environment
        Service: backend
        Name: CICRestApi
        Source: alphagov/di-devplatform-demo-sam-app/sam-app/template.yaml

  CICAPIGatewayAccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays:
        !FindInMap [
          EnvironmentConfiguration,
          !Ref Environment,
          logretentionindays,
        ]
      # KmsKeyId: !GetAtt HelloWorldKmsKey.Arn
      Tags:
        - Key: Product
          Value: GOV.UK Sign In
        - Key: System
          Value: Dev Platform
        - Key: Environment
          Value: Demo
        - Key: Service
          Value: backend
        - Key: Name
          Value: APIGatewayAccessLogGroup

  ### End of API Gateway definition.

  ### API Gateway Custom Domain definition

  CICApiCustomDomainName:
    Type: AWS::ApiGateway::DomainName
    Properties:
      DomainName: !If
        - CreateDevResources
        - !Sub
          - "api-${AWS::StackName}.${DNSSUFFIX}"
          - DNSSUFFIX:
              !FindInMap [ EnvironmentVariables, !Ref Environment, DNSSUFFIX ]
        - !Sub
          - "api.${DNSSUFFIX}"
          - DNSSUFFIX:
             !FindInMap [ EnvironmentVariables, !Ref Environment, DNSSUFFIX ]
      EndpointConfiguration:
        Types:
          - REGIONAL
      RegionalCertificateArn: !Sub "{{resolve:ssm:/${Environment}/Platform/ACM/PrimaryZoneWildcardCertificateARN}}"
      SecurityPolicy: TLS_1_2

  CICApiCertificateRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: !Ref CICApiCustomDomainName
      Type: A
      HostedZoneId: !Sub "{{resolve:ssm:/${Environment}/Platform/Route53/PrimaryZoneID}}"
      AliasTarget:
        DNSName: !GetAtt CICApiCustomDomainName.RegionalDomainName
        HostedZoneId: !GetAtt CICApiCustomDomainName.RegionalHostedZoneId

  CICApiMapping:
    Type: AWS::ApiGateway::BasePathMapping
    DependsOn: "CICApiCustomDomainName"
    Properties:
      DomainName: !Ref CICApiCustomDomainName
      RestApiId: !Ref CICRestApi
      Stage: !Sub "${CICRestApi.Stage}"

  ### End of API Gateway Custom Domain definition

  ### Function Definition

  # ClaimedIdentity
  ClaimedIdentityFunction:
    Type: AWS::Serverless::Function
    DependsOn: ClaimedIdentityFunctionLogGroup
    Properties:
      FunctionName: !Sub "CIC-ClaimedIdentity-${AWS::StackName}"
      Handler: ClaimedIdentityHandler.lambdaHandler
      CodeUri: ../src/
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: ClaimedIdHandler
          SESSION_TABLE:
            Fn::ImportValue: !Sub "${L2DynamoStackName}-session-table-name"
          PERSON_IDENTITY_TABLE_NAME:
            Fn::ImportValue: !Sub "${L2DynamoStackName}-person-identity-table-name"

      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - DynamoDBWritePolicy:
            TableName:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-session-table-name"
        - DynamoDBReadPolicy:
            TableName:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-session-table-name"
        - DynamoDBWritePolicy:
            TableName:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-person-identity-table-name"
        - KMSDecryptPolicy:
            KeyId:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-session-table-key-id"
        - KMSDecryptPolicy:
            KeyId:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-person-identity-table-key-id"

      Events:
        claimedIdentity:
          Type: Api
          Properties:
            Path: /claimedIdentity
            Method: post
            RestApiId: !Ref CICRestApi
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: false # Enabling source maps will create the required NODE_OPTIONS environment variables on your lambda function during sam build
        EntryPoints:
          - ClaimedIdentityHandler.ts

  ClaimedIdentityFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/CIC-ClaimedIdentity-${AWS::StackName}"
      RetentionInDays:
        !FindInMap [
          EnvironmentConfiguration,
          !Ref Environment,
          logretentionindays,
        ]

  ClaimedIdentityFunctionLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    # Condition: IsProdLikeEnvironment
    Properties:
      DestinationArn:
        !FindInMap [PlatformConfiguration, !Ref Environment, CSLSEGRESS]
      FilterPattern: ""
      LogGroupName: !Ref ClaimedIdentityFunctionLogGroup

  ClaimedIdentityFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref ClaimedIdentityFunction
      Principal: apigateway.amazonaws.com

  ## UserInfo
  UserInfoFunction:
    Type: AWS::Serverless::Function
    DependsOn: UserInfoFunctionLogGroup
    Properties:
      FunctionName: !Sub "User-Info-${AWS::StackName}"
      Handler: UserInfoHandler.lambdaHandler
      CodeUri: ../src/
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: UserInfoHandler
          SESSION_TABLE:
            Fn::ImportValue: !Sub "${L2DynamoStackName}-session-table-name"
          PERSON_IDENTITY_TABLE_NAME:
            Fn::ImportValue: !Sub "${L2DynamoStackName}-person-identity-table-name"
          KMS_KEY_ARN:
            Fn::ImportValue: !Sub "${L2KMSStackName}-vc-signing-key"
          TXMA_QUEUE_URL: !Ref TxMASQSQueue
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - DynamoDBWritePolicy:
            TableName:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-session-table-name"
        - DynamoDBReadPolicy:
            TableName:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-session-table-name"
        - DynamoDBReadPolicy:
            TableName:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-person-identity-table-name"
        - KMSDecryptPolicy:
            KeyId:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-session-table-key-id"
        - KMSDecryptPolicy:
            KeyId:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-person-identity-table-key-id"
        - Statement:
            - Sid: KMSPolicy
              Effect: Allow
              Action:
                - kms:Verify
                - kms:Sign
              Resource:
                Fn::ImportValue: !Sub "${L2KMSStackName}-vc-signing-key"
        - Statement:
            - Effect: Allow
              Action:
                - "sqs:SendMessage"
              Resource: !GetAtt TxMASQSQueue.Arn
            - Effect: Allow
              Action:
                - "kms:Encrypt"
                - "kms:Decrypt"
                - "kms:GenerateDataKey"
              Resource: !GetAtt TxMAKMSEncryptionKey.Arn
      Events:
        userInfo:
          Type: Api
          Properties:
            Path: /userinfo
            Method: post
            RestApiId: !Ref CICRestApi
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: false # Enabling source maps will create the required NODE_OPTIONS environment variables on your lambda function during sam build
        EntryPoints:
          - UserInfoHandler.ts

  UserInfoFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/User-Info-${AWS::StackName}"
      RetentionInDays:
        !FindInMap [
          EnvironmentConfiguration,
          !Ref Environment,
          logretentionindays,
        ]

  UserInfoFunctionLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    # Condition: IsProdLikeEnvironment
    Properties:
      DestinationArn:
        !FindInMap [PlatformConfiguration, !Ref Environment, CSLSEGRESS]
      FilterPattern: ""
      LogGroupName: !Ref UserInfoFunctionLogGroup

  UserInfoFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref UserInfoFunction
      Principal: apigateway.amazonaws.com

  # SessionHandler
  SessionFunction:
    Type: AWS::Serverless::Function
    DependsOn: SessionFunctionLogGroup
    Properties:
      FunctionName: !Sub "CIC-Session-${AWS::StackName}"
      Handler: SessionHandler.lambdaHandler
      CodeUri: ../src/
      Environment:
        Variables:
          AUTH_SESSION_TTL:
            !FindInMap [EnvironmentVariables, !Ref Environment, AUTHSESSIONTTL]
          POWERTOOLS_SERVICE_NAME: SessionHandler
          SESSION_TABLE:
            Fn::ImportValue: !Sub "${L2DynamoStackName}-session-table-name"
          PERSON_IDENTITY_TABLE_NAME:
            Fn::ImportValue: !Sub "${L2DynamoStackName}-person-identity-table-name"
          KMS_KEY_ARN:
            Fn::ImportValue: !Sub "${L2KMSStackName}-vc-signing-key"
          TXMA_QUEUE_URL: !Ref TxMASQSQueue
          CLIENT_CONFIG:
            !FindInMap [EnvironmentVariables, !Ref Environment, CLIENTS]
          ENCRYPTION_KEY_IDS:
            Fn::ImportValue: !Sub "${L2KMSStackName}-encryption-key"
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - DynamoDBWritePolicy:
            TableName:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-session-table-name"
        - DynamoDBReadPolicy:
            TableName:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-session-table-name"
        - DynamoDBWritePolicy:
            TableName:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-person-identity-table-name"
        - KMSDecryptPolicy:
            KeyId:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-session-table-key-id"
        - Statement:
            - Sid: KMSPolicy
              Effect: Allow
              Action:
                - kms:*
              Resource:
                "*"
                #Fn::ImportValue: !Sub "${L2KMSStackName}-vc-signing-key"
              #Resource: !Sub "arn:aws:kms:eu-west-2:060113405249:key/ff437a51-ec7e-4118-9c95-7b0bb2856836"
        - Statement:
            - Effect: Allow
              Action:
                - "sqs:SendMessage"
              Resource: !GetAtt TxMASQSQueue.Arn
            - Effect: Allow
              Action:
                - "kms:Encrypt"
                - "kms:Decrypt"
                - "kms:GenerateDataKey"
              Resource: !GetAtt TxMAKMSEncryptionKey.Arn
      Events:
        session:
          Type: Api
          Properties:
            Path: /session
            Method: post
            RestApiId: !Ref CICRestApi

    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: false # Enabling source maps will create the required NODE_OPTIONS environment variables on your lambda function during sam build
        EntryPoints:
          - SessionHandler.ts

  SessionFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/CIC-Session-${AWS::StackName}"
      RetentionInDays:
        !FindInMap [
          EnvironmentConfiguration,
          !Ref Environment,
          logretentionindays,
        ]

  SessionFunctionLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    # Condition: IsProdLikeEnvironment
    Properties:
      DestinationArn:
        !FindInMap [PlatformConfiguration, !Ref Environment, CSLSEGRESS]
      FilterPattern: ""
      LogGroupName: !Ref SessionFunctionLogGroup

  SessionFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref SessionFunction
      Principal: apigateway.amazonaws.com

  ## AccessToken
  TokenFunction:
    Type: AWS::Serverless::Function
    DependsOn: TokenFunctionLogGroup
    Properties:
      FunctionName: !Sub "Access-Token-${AWS::StackName}"
      Handler: AccessTokenHandler.lambdaHandler
      CodeUri: ../src/
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: AccessTokenHandler
          SESSION_TABLE:
            Fn::ImportValue: !Sub "${L2DynamoStackName}-session-table-name"
          KMS_KEY_ARN:
            Fn::ImportValue: !Sub "${L2KMSStackName}-vc-signing-key"
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - DynamoDBWritePolicy:
            TableName:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-session-table-name"
        - DynamoDBReadPolicy:
            TableName:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-session-table-name"
        - KMSDecryptPolicy:
            KeyId:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-session-table-key-id"
        - Statement:
            - Sid: KMSPolicy
              Effect: Allow
              Action:
                - kms:Sign
              Resource:
                Fn::ImportValue: !Sub "${L2KMSStackName}-vc-signing-key"
      Events:
        userInfo:
          Type: Api
          Properties:
            Path: /token
            Method: post
            RestApiId: !Ref CICRestApi
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: false # Enabling source maps will create the required NODE_OPTIONS environment variables on your lambda function during sam build
        EntryPoints:
          - AccessTokenHandler.ts

  TokenFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/Access-Token-${AWS::StackName}"
      RetentionInDays:
        !FindInMap [
          EnvironmentConfiguration,
          !Ref Environment,
          logretentionindays,
        ]

  TokenFunctionLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    # Condition: IsProdLikeEnvironment
    Properties:
      DestinationArn:
        !FindInMap [PlatformConfiguration, !Ref Environment, CSLSEGRESS]
      FilterPattern: ""
      LogGroupName: !Ref TokenFunctionLogGroup

  TokenFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref TokenFunction
      Principal: apigateway.amazonaws.com

  AuthorizationFunction:
    Type: AWS::Serverless::Function
    DependsOn: AuthorizationFunctionLogGroup
    Properties:
      FunctionName: !Sub "CIC-Authorization-${AWS::StackName}"
      Handler: AuthorizationCodeHandler.lambdaHandler
      CodeUri: ../src/
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: AuthorizationCodeHandler
          SESSION_TABLE:
            Fn::ImportValue: !Sub "${L2DynamoStackName}-session-table-name"
          TXMA_QUEUE_URL: !Ref TxMASQSQueue
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - DynamoDBWritePolicy:
            TableName:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-session-table-name"
        - DynamoDBReadPolicy:
            TableName:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-session-table-name"
        - KMSDecryptPolicy:
            KeyId:
              Fn::ImportValue: !Sub "${L2DynamoStackName}-session-table-key-id"
        - Statement:
            - Effect: Allow
              Action:
                - "sqs:SendMessage"
              Resource: !GetAtt TxMASQSQueue.Arn
            - Effect: Allow
              Action:
                - "kms:Encrypt"
                - "kms:Decrypt"
                - "kms:GenerateDataKey"
              Resource: !GetAtt TxMAKMSEncryptionKey.Arn
      Events:
        authorization:
          Type: Api
          Properties:
            Path: /authorization
            Method: get
            RestApiId: !Ref CICRestApi

    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: false # Enabling source maps will create the required NODE_OPTIONS environment variables on your lambda function during sam build
        EntryPoints:
          - AuthorizationCodeHandler.ts

  AuthorizationFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/CIC-Authorization-${AWS::StackName}"
      RetentionInDays:
        !FindInMap [
          EnvironmentConfiguration,
          !Ref Environment,
          logretentionindays,
        ]

  AuthorizationFunctionLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    # Condition: IsProdLikeEnvironment
    Properties:
      DestinationArn:
        !FindInMap [PlatformConfiguration, !Ref Environment, CSLSEGRESS]
      FilterPattern: ""
      LogGroupName: !Ref AuthorizationFunctionLogGroup

  AuthorizationFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref AuthorizationFunction
      Principal: apigateway.amazonaws.com

  TxMASQSQueue:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod:
        !FindInMap [
          EnvironmentVariables,
          !Ref Environment,
          TXMAMESSAGERETENTIONPERIODDAYS,
        ]
      VisibilityTimeout: 60
      KmsMasterKeyId: !Ref TxMAKeyAlias
      RedrivePolicy:
        deadLetterTargetArn:
          Fn::GetAtt:
            - "TxMASQSQueueDeadLetterQueue"
            - "Arn"
        maxReceiveCount: 5

  TxMASQSQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref TxMASQSQueue
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "sqs:DeleteMessage"
              - "sqs:GetQueueAttributes"
              - "sqs:ChangeMessageVisibility"
              - "sqs:ReceiveMessage"
            Resource:
              - !GetAtt TxMASQSQueue.Arn
            Principal:
              AWS:
                - !FindInMap [TxMAAccounts, !Ref Environment, EVENTS]

  TxMASQSQueueDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 259200 # three days
      KmsMasterKeyId: !Sub TxMAKMSEncryptionKey

  TxMAKMSEncryptionKey:
    Type: AWS::KMS::Key
    # KMS Key manually rotated.
    # checkov:skip=CKV_AWS_7: KMS Key manually rotated.
    Properties:
      Description: A KMS Key for encrypting the SQS Queue for TxMA
      Enabled: true
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - "kms:*"
            Resource:
              - "*"
          - Effect: Allow
            Principal:
              AWS: !FindInMap [TxMAAccounts, !Ref Environment, EVENTS]
            Action:
              - "kms:Encrypt"
              - "kms:Decrypt"
              - "kms:GenerateDataKey"
            Resource:
              - "*"
      KeySpec: SYMMETRIC_DEFAULT
      KeyUsage: ENCRYPT_DECRYPT
      MultiRegion: false
      PendingWindowInDays: 7
      Tags:
        - Key: KeyType
          Value: Encryption Key
        - Key: Environment
          Value: !Sub ${Environment}

  TxMAKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !If
        - CreateDevResources
        - !Sub "alias/TxMAKMSEncryptionKey-${AWS::StackName}"
        - alias/TxMAKMSEncryptionKey
      TargetKeyId: !Ref TxMAKMSEncryptionKey

  JsonWebKeysFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - "JsonWebKeysLogGroup"
    Properties:
      FunctionName: !Sub "JsonWebKeys-${AWS::StackName}"
      CodeUri: ../src/
      Handler: JwksHandler.lambdaHandler
      ReservedConcurrentExecutions: !If
        - IsProdLikeEnvironment
        - 80
        - !Ref AWS::NoValue
      Policies:
        - AWSXRayDaemonWriteAccess
        - S3WritePolicy:
            BucketName: !Ref JsonWebKeysBucket
        - S3ReadPolicy:
            BucketName: !Ref JsonWebKeysBucket
        - Statement:
            - Sid: KMSSignPolicy
              Effect: Allow
              Action:
                - kms:GetPublicKey
              Resource:
                - Fn::ImportValue: !Sub "${L2KMSStackName}-vc-signing-key"
                - Fn::ImportValue: !Sub "${L2KMSStackName}-encryption-key"
      Events:
        InvocationLevel:
          Type: Schedule
          Properties:
            Schedule: cron(0 * * * ? *)

      Environment:
        Variables:
          JWKS_BUCKET_NAME: !Ref JsonWebKeysBucket
          SIGNING_KEY_IDS:
            Fn::ImportValue: !Sub "${L2KMSStackName}-vc-signing-key"
          ENCRYPTION_KEY_IDS:
            Fn::ImportValue: !Sub "${L2KMSStackName}-encryption-key"
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - JwksHandler.ts

  JsonWebKeysLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/JsonWebKeys-${AWS::StackName}"
      RetentionInDays:
        !FindInMap [
          EnvironmentConfiguration,
          !Ref Environment,
          logretentionindays,
        ]

  JsonWebKeysFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt JsonWebKeysFunction.Arn
      Principal: events.amazonaws.com

# Alarms
# BackEnd5xxAlarms

  5XXErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: "DeployAlarms"
    Properties:
      AlarmName: !Sub "${AWS::StackName}-5XXErrorAlarm"
      AlarmDescription: !Sub "There has been a small proportion of 5XX errors on the backend api-gateway. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<10,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: ApiName
                  Value: !Sub "cic-cri-${AWS::StackName}"
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub "cic-cri-${AWS::StackName}"
            Period: 60
            Stat: Sum

  5XXErrorCriticalAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: "DeployAlarms"
    Properties:
      AlarmName: !Sub "${AWS::StackName}-5XXErrorCriticalAlarm"
      # AlarmDescription: !Sub "There has been a significant proportion of 5XX errors on the backend api-gateway. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-critical-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 80
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<10,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: ApiName
                  Value: !Sub "cic-cri-${AWS::StackName}"
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub "cic-cri-${AWS::StackName}"
            Period: 60
            Stat: Sum

  UserInfo5XXApiGwErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-UserInfo5XXApiGwErrorAlarm"
      AlarmDescription: !Sub "There has been a small proportion of 5XX errors on the userInfo endpoint. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<4 || error<2,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "cic-cri-${AWS::StackName}"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /userinfo
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "cic-cri-${AWS::StackName}"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /userinfo
            Period: 60
            Stat: Sum

  UserInfo5XXApiGwErrorCriticalAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-UserInfo5XXApiGwErrorCriticalAlarm"
      # AlarmDescription: !Sub "There has been a significant proportion of 5XX errors on the userInfo endpoint. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-critical-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 80
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<10,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "cic-cri-${AWS::StackName}"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /userinfo
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "cic-cri-${AWS::StackName}"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /userinfo
            Period: 60
            Stat: Sum

  Token5XXApiGwErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-Token5XXApiGwErrorAlarm"
      AlarmDescription: !Sub "There has been a small proportion of 5XX errors on the Token endpoint. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<4 || error<2,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: ApiName
                  Value: !Sub "id-check-cri-${AWS::StackName}"
                - Name: Resource
                  Value: /token
                - Name: Stage
                  Value: !Ref Environment
                - Name: Method
                  Value: GET
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub "id-check-cri-${AWS::StackName}"
                - Name: Resource
                  Value: /token
                - Name: Stage
                  Value: !Ref Environment
                - Name: Method
                  Value: GET
            Period: 60
            Stat: Sum

  Token5XXApiGwErrorCriticalAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-Token5XXApiGwErrorCriticalAlarm"
      AlarmDescription: !Sub "There has been a significant proportion of 5XX errors on the Token endpoint. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-critical-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 80
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<10,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: ApiName
                  Value: !Sub "id-check-cri-${AWS::StackName}"
                - Name: Resource
                  Value: /token
                - Name: Stage
                  Value: !Ref Environment
                - Name: Method
                  Value: GET
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub "id-check-cri-${AWS::StackName}"
                - Name: Resource
                  Value: /token
                - Name: Stage
                  Value: !Ref Environment
                - Name: Method
                  Value: GET
            Period: 60
            Stat: Sum

  Authorization5XXApiGwErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-UserInfo5XXApiGwErrorAlarm"
      # AlarmDescription: !Sub "There has been a small proportion of 5XX errors on the userInfo endpoint. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<4 || error<2,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "cic-cri-${AWS::StackName}"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /authorization
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "cic-cri-${AWS::StackName}"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /authorization
            Period: 60
            Stat: Sum

  Authorization5XXApiGwErrorCriticalAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-UserInfo5XXApiGwErrorCriticalAlarm"
      # AlarmDescription: !Sub "There has been a significant proportion of 5XX errors on the userInfo endpoint. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-critical-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 80
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<10,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "cic-cri-${AWS::StackName}"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /authorization
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "cic-cri-${AWS::StackName}"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /authorization
            Period: 60
            Stat: Sum

  ClaimedIdentity5XXApiGwErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-UserInfo5XXApiGwErrorAlarm"
      # AlarmDescription: !Sub "There has been a small proportion of 5XX errors on the userInfo endpoint. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<4 || error<2,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "cic-cri-${AWS::StackName}"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /claimedidentity
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "cic-cri-${AWS::StackName}"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /claimedidentity
            Period: 60
            Stat: Sum

  ClaimedIdentity5XXApiGwErrorCriticalAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-UserInfo5XXApiGwErrorCriticalAlarm"
      # AlarmDescription: !Sub "There has been a significant proportion of 5XX errors on the userInfo endpoint. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-critical-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 80
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<10,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "cic-cri-${AWS::StackName}"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /claimedidentity
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "cic-cri-${AWS::StackName}"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /claimedidentity
            Period: 60
            Stat: Sum

  Session5XXApiGwErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-UserInfo5XXApiGwErrorAlarm"
      # AlarmDescription: !Sub "There has been a small proportion of 5XX errors on the userInfo endpoint. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<4 || error<2,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "cic-cri-${AWS::StackName}"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /session
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "cic-cri-${AWS::StackName}"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /session
            Period: 60
            Stat: Sum

  Session5XXApiGwErrorCriticalAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-UserInfo5XXApiGwErrorCriticalAlarm"
      # AlarmDescription: !Sub "There has been a significant proportion of 5XX errors on the userInfo endpoint. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-critical-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 80
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<10,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "cic-cri-${AWS::StackName}"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /session
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "cic-cri-${AWS::StackName}"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /session
            Period: 60
            Stat: Sum

  JsonWebKeyFunction5XXApiGwErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-UserInfo5XXApiGwErrorAlarm"
      # AlarmDescription: !Sub "There has been a small proportion of 5XX errors on the userInfo endpoint. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<4 || error<2,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "cic-cri-${AWS::StackName}"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /.well-known/jwks.json
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "cic-cri-${AWS::StackName}"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /.well-known/jwks.json
            Period: 60
            Stat: Sum

  JsonWebKeyFunction5XXApiGwErrorCriticalAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-UserInfo5XXApiGwErrorCriticalAlarm"
      # AlarmDescription: !Sub "There has been a significant proportion of 5XX errors on the userInfo endpoint. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-critical-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 80
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<10,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "cic-cri-${AWS::StackName}"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /.well-known/jwks.json
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "cic-cri-${AWS::StackName}"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /.well-known/jwks.json
            Period: 60
            Stat: Sum

# BackEnd4xxAlarms

  UserInfo4XXApiGwErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-UserInfo4XXApiGwErrorAlarm"
      # AlarmDescription: !Sub "There has been a small proportion of 4XX errors on the userInfo endpoint. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<4 || error<2,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "cic-cri-${AWS::StackName}"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /userinfo
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "cic-cri-${AWS::StackName}"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /userinfo
            Period: 60
            Stat: Sum

Token4XXApiGwErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-Token4XXApiGwErrorAlarm"
      AlarmDescription: !Sub "There has been a small proportion of 4XX errors on the Token endpoint. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<4 || error<2,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: ApiName
                  Value: !Sub "id-check-cri-${AWS::StackName}"
                - Name: Resource
                  Value: /token
                - Name: Stage
                  Value: !Ref Environment
                - Name: Method
                  Value: GET
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub "id-check-cri-${AWS::StackName}"
                - Name: Resource
                  Value: /token
                - Name: Stage
                  Value: !Ref Environment
                - Name: Method
                  Value: GET
            Period: 60
            Stat: Sum

  Authorization4XXApiGwErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-UserInfo4XXApiGwErrorAlarm"
      # AlarmDescription: !Sub "There has been a small proportion of 4XX errors on the userInfo endpoint. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<4 || error<2,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "cic-cri-${AWS::StackName}"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /authorization
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "cic-cri-${AWS::StackName}"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /authorization
            Period: 60
            Stat: Sum

  ClaimedIdentity4XXApiGwErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-UserInfo4XXApiGwErrorAlarm"
      # AlarmDescription: !Sub "There has been a small proportion of 4XX errors on the userInfo endpoint. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<4 || error<2,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "cic-cri-${AWS::StackName}"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /claimedidentity
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "cic-cri-${AWS::StackName}"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /claimedidentity
            Period: 60
            Stat: Sum

  Session4XXApiGwErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-UserInfo4XXApiGwErrorAlarm"
      # AlarmDescription: !Sub "There has been a small proportion of 4XX errors on the userInfo endpoint. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<4 || error<2,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "cic-cri-${AWS::StackName}"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /session
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "cic-cri-${AWS::StackName}"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /session
            Period: 60
            Stat: Sum

  JsonWebKeyFunction4XXApiGwErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-UserInfo4XXApiGwErrorAlarm"
      # AlarmDescription: !Sub "There has been a small proportion of 4XX errors on the userInfo endpoint. ${SupportManualURL}"
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<4 || error<2,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "cic-cri-${AWS::StackName}"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /.well-known/jwks.json
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: Method
                  Value: POST
                - Name: ApiName
                  Value: !Sub "cic-cri-${AWS::StackName}"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /.well-known/jwks.json
            Period: 60
            Stat: Sum

# BackEndLatencyAlarm

  LatencyAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: "DeployAlarms"
    Properties:
      AlarmName: !Sub "${AWS::StackName}-apiGWLatencyAlarm"
      AlarmDescription: !Sub "There has been increased latency on backend api-gateway. ${SupportManualURL}"
      ActionsEnabled: false  # disabled until we're ready for alarm actions to fire
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 2500
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: safeLatency
          Label: safeLatency
          ReturnData: true
          Expression: IF(invocations<10,0,maxLatency)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: ApiName
                  Value: !Sub "id-check-cri-${AWS::StackName}"
            Period: 60
            Stat: Sum
        - Id: maxLatency
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Latency
              Dimensions:
                - Name: ApiName
                  Value: !Sub "id-check-cri-${AWS::StackName}"
            Period: 60
            Stat: Maximum

# TxMAAlarms

  TXMASQSOldMessagesAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: "DeployAlarms"
    Properties:
      AlarmName: !Sub "${AWS::StackName}-TXMASQSOldMessagesAlarm"
      AlarmDescription: !Sub "Trigger an alarm when the age of the oldest TXMA message is 5 or more minutes. ${SupportManualURL}"
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      MetricName: ApproximateAgeOfOldestMessage
      Namespace: AWS/SQS
      Statistic: Maximum
      Dimensions:
        - Name: QueueName
          Value: !GetAtt TxMASQSQueue.QueueName
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 300
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  TXMADLQMessagesVisibleAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: "DeployAlarms"
    Properties:
      AlarmName: !Sub "${AWS::StackName}-TXMADLQMessagesVisibleAlarm"
      AlarmDescription: !Sub "Trigger an alarm when message gets added to TXMA DLQ. ${SupportManualURL}"
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Statistic: Maximum
      Dimensions:
        - Name: QueueName
          Value: !GetAtt TxMASQSQueueDeadLetterQueue.QueueName
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

# ConcurrencyAlarms

  UserInfoConcurrency80Alarm:
    Type: AWS::CloudWatch::Alarm
    Condition: "DeployAlarms"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-critical-alert
      OKActions:
        - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: []
      AlarmDescription: !Sub "Trigger the alarm if over 80% of reserved concurrency is used. ${SupportManualURL}"
      AlarmName: !Sub "${AWS::StackName}-${VerifyAuthorizeRequestFunction}-concurrency"
      MetricName: ConcurrentExecutions
      Namespace: AWS/Lambda
      Dimensions:
        - Name: FunctionName
          Value: !Ref VerifyAuthorizeRequestFunction
      Statistic: Maximum
      Period: 60 # This is the minimum value for the AWS Namespace
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 128 # This is 80% of the reserved executions
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching
  
  TokenConcurrency80Alarm:
    Type: AWS::CloudWatch::Alarm
    Condition: "DeployAlarms"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-critical-alert
      OKActions:
        - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: []
      AlarmDescription: !Sub "Trigger the alarm if over 80% of reserved concurrency is used. ${SupportManualURL}"
      AlarmName: !Sub "${AWS::StackName}-${VerifyAuthorizeRequestFunction}-concurrency"
      MetricName: ConcurrentExecutions
      Namespace: AWS/Lambda
      Dimensions:
        - Name: FunctionName
          Value: !Ref VerifyAuthorizeRequestFunction
      Statistic: Maximum
      Period: 60 # This is the minimum value for the AWS Namespace
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 128 # This is 80% of the reserved executions
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching
  
  AuthorizationConcurrency80Alarm:
    Type: AWS::CloudWatch::Alarm
    Condition: "DeployAlarms"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-critical-alert
      OKActions:
        - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: []
      AlarmDescription: !Sub "Trigger the alarm if over 80% of reserved concurrency is used. ${SupportManualURL}"
      AlarmName: !Sub "${AWS::StackName}-${VerifyAuthorizeRequestFunction}-concurrency"
      MetricName: ConcurrentExecutions
      Namespace: AWS/Lambda
      Dimensions:
        - Name: FunctionName
          Value: !Ref VerifyAuthorizeRequestFunction
      Statistic: Maximum
      Period: 60 # This is the minimum value for the AWS Namespace
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 128 # This is 80% of the reserved executions
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

  ClaimedIdentityConcurrency80Alarm:
    Type: AWS::CloudWatch::Alarm
    Condition: "DeployAlarms"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-critical-alert
      OKActions:
        - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: []
      AlarmDescription: !Sub "Trigger the alarm if over 80% of reserved concurrency is used. ${SupportManualURL}"
      AlarmName: !Sub "${AWS::StackName}-${VerifyAuthorizeRequestFunction}-concurrency"
      MetricName: ConcurrentExecutions
      Namespace: AWS/Lambda
      Dimensions:
        - Name: FunctionName
          Value: !Ref VerifyAuthorizeRequestFunction
      Statistic: Maximum
      Period: 60 # This is the minimum value for the AWS Namespace
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 128 # This is 80% of the reserved executions
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

  SessionConcurrency80Alarm:
    Type: AWS::CloudWatch::Alarm
    Condition: "DeployAlarms"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-critical-alert
      OKActions:
        - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: []
      AlarmDescription: !Sub "Trigger the alarm if over 80% of reserved concurrency is used. ${SupportManualURL}"
      AlarmName: !Sub "${AWS::StackName}-${VerifyAuthorizeRequestFunction}-concurrency"
      MetricName: ConcurrentExecutions
      Namespace: AWS/Lambda
      Dimensions:
        - Name: FunctionName
          Value: !Ref VerifyAuthorizeRequestFunction
      Statistic: Maximum
      Period: 60 # This is the minimum value for the AWS Namespace
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 128 # This is 80% of the reserved executions
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

  LambdaTimeoutAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: "DeployAlarms"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: []
      AlarmDescription: Trigger the alarm if any lambda in the account timesout 5 times within 5 minutes.
      AlarmName: !Sub "${AWS::StackName}-LambdaTimeoutAlarm"
      EvaluationPeriods: 5
      DatapointsToAlarm: 5
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: a1
          Label: AcumulatedLambdaTimeOuts
          ReturnData: true
          Expression: (b1 + c1 + d1 + e1) >= 0
        - Id: b1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: !Sub "${AWS::StackName}/TimeOutLogMessages"
              MetricName: VerifyAuthorizeLambdaTimeOut
            Period: 60
            Stat: Sum
        - Id: c1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: !Sub "${AWS::StackName}/TimeOutLogMessages"
              MetricName: UserInfoLambdaTimeOut
            Period: 60
            Stat: Sum
        - Id: d1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: !Sub "${AWS::StackName}/TimeOutLogMessages"
              MetricName: TokenLambdaTimeOut
            Period: 60
            Stat: Sum
        - Id: e1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: !Sub "${AWS::StackName}/TimeOutLogMessages"
              MetricName: IssueAccessTokenLambdaTimeOut
            Period: 60
            Stat: Sum

  LambdaThrottleAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: "DeployAlarms"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-topic-critical-alert
      OKActions:
        - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: []
      AlarmDescription: !Sub "Trigger the alarm if any lambda in the account throttles. ${SupportManualURL}"
      AlarmName: !Sub "${AWS::StackName}-LambdaThrottleAlarm"
      MetricName: Throttles
      Namespace: AWS/Lambda
      Statistic: Sum
      TreatMissingData: notBreaching
      Period: 60 # This is the minimum value for the AWS Namespace
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanThreshold

# JourneyCompletionAlarms

  JourneyCompletionAlarm:
  # copied from low point alarm, needs adjusting
    DependsOn:
      - "VerifyAuthorizeRequest200MetricFilter"
      - "UserInfo200MetricFilter"
    Type: AWS::CloudWatch::Alarm
    Condition: "DeployAlarms"
    Properties:
      AlarmName: !Sub "${AWS::StackName}-JourneyCompletionLowPointAlarm"
      AlarmDescription:
        Fn::Sub: >-
          Trigger a critical alert if the ratio of started v completed journeys falls below the expected minimum based on the anomaly detection model. ${SupportManualURL}
      ActionsEnabled: false
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      ThresholdMetricId: ad1
      ComparisonOperator: LessThanLowerThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: s1
          ReturnData: false
          Label: VerifyAuthorizeRequest/StatusCodes/200
          MetricStat:
            Metric:
              Namespace: VerifyAuthorizeRequest/StatusCodes
              MetricName: 200Success
            Period: 900 # This is 15 minutes, which is a sensible journey time
            Stat: Sum
        - Id: c1
          ReturnData: false
          Label: UserInfo/StatusCodes/200
          MetricStat:
            Metric:
              Namespace: UserInfo/StatusCodes
              MetricName: 200Success
            Period: 900 # This is 15 minutes, which is a sensible journey time
            Stat: Sum
        - Id: cr1
          ReturnData: true
          # The expression below converts in to a completion percentage, and filters out data points where traffic
          # volume is less than or equal to 5 journey starts over the 15 min period. The use of "1/0" creates a NaN
          # result which CW interprets as missing data - see
          # https://stackoverflow.com/questions/74450703/aws-cloudwatch-math-expressions-draw-null-empty
          Expression: "IF(s1>5,(c1/s1)*100,1/0)"
          Label: CompletionPercentage
        - Id: ad1
          ReturnData: true
          Expression: ANOMALY_DETECTION_BAND(cr1, 3)
          Label: CompletionPercentage (expected)

  JourneyCompletionLowPointAlarm:
    DependsOn:
      - "VerifyAuthorizeRequest200MetricFilter"
      - "UserInfo200MetricFilter"
    Type: AWS::CloudWatch::Alarm
    Condition: "DeployAlarms"
    Properties:
      AlarmName: !Sub "${AWS::StackName}-JourneyCompletionLowPointAlarm"
      AlarmDescription:
        Fn::Sub: >-
          Trigger a critical alert if the ratio of started v completed journeys falls below the expected minimum based on the anomaly detection model. ${SupportManualURL}
      ActionsEnabled: false
      OKActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      AlarmActions:
        - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      ThresholdMetricId: ad1
      ComparisonOperator: LessThanLowerThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: s1
          ReturnData: false
          Label: VerifyAuthorizeRequest/StatusCodes/200
          MetricStat:
            Metric:
              Namespace: VerifyAuthorizeRequest/StatusCodes
              MetricName: 200Success
            Period: 900 # This is 15 minutes, which is a sensible journey time
            Stat: Sum
        - Id: c1
          ReturnData: false
          Label: UserInfo/StatusCodes/200
          MetricStat:
            Metric:
              Namespace: UserInfo/StatusCodes
              MetricName: 200Success
            Period: 900 # This is 15 minutes, which is a sensible journey time
            Stat: Sum
        - Id: cr1
          ReturnData: true
          # The expression below converts in to a completion percentage, and filters out data points where traffic
          # volume is less than or equal to 5 journey starts over the 15 min period. The use of "1/0" creates a NaN
          # result which CW interprets as missing data - see
          # https://stackoverflow.com/questions/74450703/aws-cloudwatch-math-expressions-draw-null-empty
          Expression: "IF(s1>5,(c1/s1)*100,1/0)"
          Label: CompletionPercentage
        - Id: ad1
          ReturnData: true
          Expression: ANOMALY_DETECTION_BAND(cr1, 3)
          Label: CompletionPercentage (expected)

# Alarm Dashboards

  CriticalAlarmDashboard:
    Type: AWS::CloudWatch::Dashboard
    Condition: "DeployAlarms"
    Properties:
      DashboardName: !Sub '${AWS::StackName}-Critical-Alarm-Overview'
      DashboardBody:
        Fn::Sub: >
          {
          "widgets": [
              {
                "height": 6,
                "width": 12,
                "y": 0,
                "x": 0,
                "type": "metric",
                "properties": {
                  "title": "UserInfo Vendor Broke Message Contract High Threshold - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${UserInfoVendorBrokeMessageContractHighThresholdAlarm.Arn}"]
                     },
                  "view": "timeSeries",
                  "stacked": false
                }
              },
              {
                "height": 6,
                "width": 12,
                "y": 0,
                "x": 12,
                "type": "metric",
                "properties": {
                  "title": "UserInfo Unexpected Document Type High Threshold - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${UserInfoUnexpectedDocumentTypeHighThresholdAlarm.Arn}"]
                     },
                  "view": "timeSeries",
                  "stacked": false
                }
              },
              {
                "height": 6,
                "width": 12,
                "y": 6,
                "x": 0,
                "type": "metric",
                "properties": {
                  "title": "API Gateway 5XX critical - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${5XXErrorCriticalAlarm.Arn}"]
                  },
                  "view": "timeSeries",
                  "stacked": false
                }
              },
              {
                "height": 6,
                "width": 12,
                "y": 6,
                "x": 12,
                "type": "metric",
                "properties": {
                  "title": "UserInfo 5XX critical - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${UserInfo5XXApiGwErrorCriticalAlarm.Arn}"]
                  },
                  "view": "timeSeries",
                  "stacked": false
                }
              },
              {
                "height": 6,
                "width": 12,
                "y": 12,
                "x": 0,
                "type": "metric",
                "properties": {
                  "title": "Token 5XX critical - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${Token5XXApiGwErrorCriticalAlarm.Arn}"]
                  },
                  "view": "timeSeries",
                  "stacked": false
                }
              },
              {
                "height": 6,
                "width": 12,
                "y": 12,
                "x": 12,
                "type": "metric",
                "properties": {
                  "title": "TokenV2 5XX critical - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${TokenV25XXApiGwErrorCriticalAlarm.Arn}"]
                  },
                  "view": "timeSeries",
                  "stacked": false
                }
              },
              {
                "height": 6,
                "width": 12,
                "y": 18,
                "x": 0,
                "type": "metric",
                "properties": {
                  "title": "Lambda Throttle Alarm - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${LambdaThrottleAlarm.Arn}"]
                  },
                  "view": "timeSeries",
                  "stacked": false
                }
              },
              {
                "height": 6,
                "width": 12,
                "y": 18,
                "x": 12,
                "type": "metric",
                "properties": {
                  "title": "Journey Completion - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${JourneyCompletion.Arn}"]
                  },
                  "view": "timeSeries",
                  "stacked": false
                }
              },
              {
                "height": 6,
                "width": 12,
                "y": 24,
                "x": 0,
                "type": "metric",
                "properties": {
                  "title": "Journey Completion Low Point - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${JourneyCompletionLowPoint.Arn}"]
                  },
                  "view": "timeSeries",
                  "stacked": false
                }
              },
              {
                "height": 6,
                "width": 12,
                "y": 30,
                "x": 12,
                "type": "metric",
                "properties": {
                  "title": "UserInfo Vendor Broke Message Contract High Threshold - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${UserInfoVendorBrokeMessageContractHighThresholdAlarm.Arn}"]
                     },
                  "view": "timeSeries",
                  "stacked": false
                }
              },
              {
                "height": 6,
                "width": 12,
                "y": 36,
                "x": 0,
                "type": "metric",
                "properties": {
                  "title": "UserInfo Mobile Broke Message Contract High Threshold - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${UserInfoMobileBrokeMessageContractHighThresholdAlarm.Arn}"]
                     },
                  "view": "timeSeries",
                  "stacked": false
                }
              },
              {
                "height": 6,
                "width": 12,
                "y": 42,
                "x": 0,
                "type": "metric",
                "properties": {
                  "title": "UserInfo Unexpected Document Type High Threshold - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${UserInfoV2UnexpectedDocumentTypeHighThresholdAlarm.Arn}"]
                     },
                  "view": "timeSeries",
                  "stacked": false
                }
              }
            ]
          }

  WarningAlarmDashboard:
    Type: AWS::CloudWatch::Dashboard
    Condition: "DeployAlarms"
    Properties:
      DashboardName: !Sub '${AWS::StackName}-Warning-Alarm-Overview'
      DashboardBody:
        Fn::Sub: >
          {
            "widgets": [
              {
                "height": 6,
                "width": 12,
                "y": 0,
                "x": 0,
                "type": "metric",
                "properties": {
                  "title": "Latency Alarm - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${LatencyAlarm.Arn}"]
                  },
                  "view": "timeSeries",
                  "stacked": false
                }
              },
              {
                "height": 6,
                "width": 12,
                "y": 0,
                "x": 12,
                "type": "metric",
                "properties": {
                  "title": "200 Success OOH - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${200SuccessAlarm.Arn}"]
                  },
                  "view": "timeSeries",
                  "stacked": false
                }
              },
              {
                "height": 6,
                "width": 12,
                "y": 6,
                "x": 0,
                "type": "metric",
                "properties": {
                  "title": "User Info 500 - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${UserInfo500ErrorAlarm.Arn}"]
                  },
                  "view": "timeSeries",
                  "stacked": false
                }
              },
              {
                "height": 6,
                "width": 12,
                "y": 6,
                "x": 12,
                "type": "metric",
                "properties": {
                  "title": "5XX Error Alarm - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${5XXErrorAlarm.Arn}"]
                  },
                  "view": "timeSeries",
                  "stacked": false
                }
              },
              {
                "height": 6,
                "width": 12,
                "y": 12,
                "x": 0,
                "type": "metric",
                "properties": {
                  "title": "UserInfo 5XX ApiGw Error - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${UserInfo5XXApiGwErrorAlarm.Arn}"]
                  },
                  "view": "timeSeries",
                  "stacked": false
                }
              },
              {
                "height": 6,
                "width": 12,
                "y": 12,
                "x": 12,
                "type": "metric",
                "properties": {
                  "title": "Token 5XX ApiGw Error - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${Token5XXApiGwErrorAlarm.Arn}"]
                  },
                  "view": "timeSeries",
                  "stacked": false
                }
              },
              {
                "height": 6,
                "width": 12,
                "y": 18,
                "x": 12,
                "type": "metric",
                "properties": {
                  "title": "User Info 4XX - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${UserInfo4XXApiGwErrorAlarm.Arn}"]
                  },
                  "view": "timeSeries",
                  "stacked": false
                }
              },
              {
                "height": 6,
                "width": 12,
                "y": 24,
                "x": 0,
                "type": "metric",
                "properties": {
                  "title": "Verify Authorize 4XX - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${VerifyAuthorizeRequest4XXApiGwErrorAlarm.Arn}"]
                  },
                  "view": "timeSeries",
                  "stacked": false
                }
              },
              {
                "height": 6,
                "width": 12,
                "y": 24,
                "x": 12,
                "type": "metric",
                "properties": {
                  "title": "Fetch Bio Token 4XX - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${FetchBiometricToken4XXApiGwErrorAlarm.Arn}"]
                  },
                  "view": "timeSeries",
                  "stacked": false
                }
              },
              {
                "height": 6,
                "width": 12,
                "y": 30,
                "x": 0,
                "type": "metric",
                "properties": {
                  "title": "Fetch Bio Token V2 4XX - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${FetchBiometricTokenV24XXApiGwErrorAlarm.Arn}"]
                  },
                  "view": "timeSeries",
                  "stacked": false
                }
              },
              {
                "height": 6,
                "width": 12,
                "y": 30,
                "x": 12,
                "type": "metric",
                "properties": {
                  "title": "Finish Bio Session 4XX - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${FinishBiometricSession4XXApiGwErrorAlarm.Arn}"]
                  },
                  "view": "timeSeries",
                  "stacked": false
                }
              },
              {
                "height": 6,
                "width": 12,
                "y": 36,
                "x": 0,
                "type": "metric",
                "properties": {
                  "title": "User Abort Command 4XX - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${UserAbortCommand4XXApiGwErrorAlarm.Arn}"]
                  },
                  "view": "timeSeries",
                  "stacked": false
                }
              },
              {
                "height": 6,
                "width": 12,
                "y": 36,
                "x": 12,
                "type": "metric",
                "properties": {
                  "title": "Redirect 4XX - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${Redirect4XXApiGwErrorAlarm.Arn}"]
                  },
                  "view": "timeSeries",
                  "stacked": false
                }
              },
              {
                "height": 6,
                "width": 12,
                "y": 42,
                "x": 0,
                "type": "metric",
                "properties": {
                  "title": "Token 4XX - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${Token4XXApiGwErrorAlarm.Arn}"]
                  },
                  "view": "timeSeries",
                  "stacked": false
                }
              },
              {
                "height": 6,
                "width": 12,
                "y": 42,
                "x": 12,
                "type": "metric",
                "properties": {
                  "title": "App Info 4XX - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${AppInfo4XXApiGwErrorAlarm.Arn}"]
                  },
                  "view": "timeSeries",
                  "stacked": false
                }
              },
              {
                "height": 6,
                "width": 12,
                "y": 48,
                "x": 0,
                "type": "metric",
                "properties": {
                  "title": "Well Known 4XX - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${WellKnown4XXApiGwErrorAlarm.Arn}"]
                  },
                  "view": "timeSeries",
                  "stacked": false
                }
              },
              {
                "height": 6,
                "width": 12,
                "y": 48,
                "x": 12,
                "type": "metric",
                "properties": {
                  "title": "TXMA SQS Old Messages - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${TXMASQSOldMessagesAlarm.Arn}"]
                  },
                  "view": "timeSeries",
                  "stacked": false
                }
              },
              {
                "height": 6,
                "width": 12,
                "y": 54,
                "x": 0,
                "type": "metric",
                "properties": {
                  "title": "TXMA DLQ Messages Visible - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${TXMADLQMessagesVisibleAlarm.Arn}"]
                  },
                  "view": "timeSeries",
                  "stacked": false
                }
              },
              {
                "height": 6,
                "width": 12,
                "y": 54,
                "x": 12,
                "type": "metric",
                "properties": {
                  "title": "UserInfo Vendor Broke Message Contract - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${UserInfoVendorBrokeMessageContractAlarm.Arn}"]
                  },
                  "view": "timeSeries",
                  "stacked": false
                }
              },
              {
                "height": 6,
                "width": 12,
                "y": 60,
                "x": 0,
                "type": "metric",
                "properties": {
                  "title": "UserInfo Unexpected Document Type - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${UserInfoUnexpectedDocumentTypeAlarm.Arn}"]
                     },
                  "view": "timeSeries",
                  "stacked": false
                }
              },
              {
                "height": 6,
                "width": 12,
                "y": 60,
                "x": 12,
                "type": "metric",
                "properties": {
                  "title": "UserInfo Vendor Exception - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${UserInfoVendorExceptionAlarm.Arn}"]
                     },
                  "view": "timeSeries",
                  "stacked": false
                }
              },
              {
                "height": 6,
                "width": 12,
                "y": 66,
                "x": 0,
                "type": "metric",
                "properties": {
                  "title": "BiometricToken Vendor Exception - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${FetchBiometricTokenVendorExceptionAlarm.Arn}"]
                     },
                  "view": "timeSeries",
                  "stacked": false
                }
              },
              {
                "height": 6,
                "width": 12,
                "y": 66,
                "x": 12,
                "type": "metric",
                "properties": {
                  "title": "BiometricToken V2 Vendor Exception - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${FetchBiometricTokenV2VendorExceptionAlarm.Arn}"]
                     },
                  "view": "timeSeries",
                  "stacked": false
                }
              },
              {
                "height": 6,
                "width": 12,
                "y": 72,
                "x": 0,
                "type": "metric",
                "properties": {
                  "title": "Journey completion low point - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${JourneyCompletionLowPointAlarm.Arn}"]
                     },
                  "view": "timeSeries",
                  "stacked": false
                }
              },
              {
                "height": 6,
                "width": 12,
                "y": 72,
                "x": 12,
                "type": "metric",
                "properties": {
                  "title": "ResourceOwner4XXApiGwErrorAlarm- ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${ResourceOwner4XXApiGwErrorAlarm.Arn}"]
                     },
                  "view": "timeSeries",
                  "stacked": false
                }
              },
              {
                "height": 6,
                "width": 12,
                "y": 78,
                "x": 0,
                "type": "metric",
                "properties": {
                  "title": "UserInfoV2 5XX ApiGw Error - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${UserInfoV25XXApiGwErrorAlarm.Arn}"]
                     },
                  "view": "timeSeries",
                  "stacked": false
                }
              },
              {
                "height": 6,
                "width": 12,
                "y": 78,
                "x": 12,
                "type": "metric",
                "properties": {
                  "title": "UserInfoV2 4XX ApiGw Error - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${UserInfoV24XXApiGwErrorAlarm.Arn}"]
                     },
                  "view": "timeSeries",
                  "stacked": false
                }
              },
              {
                "height": 6,
                "width": 12,
                "y": 84,
                "x": 0,
                "type": "metric",
                "properties": {
                  "title": "UserInfo Mobile Broke Message Contract - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${UserInfoMobileBrokeMessageContractAlarm.Arn}"]
                  },
                  "view": "timeSeries",
                  "stacked": false
                }
              },
              {
                "height": 6,
                "width": 12,
                "y": 84,
                "x": 12,
                "type": "metric",
                "properties": {
                  "title": "UserInfoV2 Mobile Broke Message Contract - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${UserInfoV2MobileBrokeMessageContractAlarm.Arn}"]
                     },
                  "view": "timeSeries",
                  "stacked": false
                }
              },
              {
                "height": 6,
                "width": 12,
                "y": 90,
                "x": 0,
                "type": "metric",
                "properties": {
                  "title": "UserInfoV2 Vendor Broke Message Contract - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${UserInfoV2VendorBrokeMessageContractAlarm.Arn}"]
                  },
                  "view": "timeSeries",
                  "stacked": false
                }
              },
              {
                "height": 6,
                "width": 12,
                "y": 90,
                "x": 12,
                "type": "metric",
                "properties": {
                  "title": "UserInfoV2 Unexpected Document Type - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${UserInfoV2UnexpectedDocumentTypeAlarm.Arn}"]
                     },
                  "view": "timeSeries",
                  "stacked": false
                }
              },
              {
                "height": 6,
                "width": 12,
                "y": 96,
                "x": 0,
                "type": "metric",
                "properties": {
                  "title": "UserInfoV2 Vendor Exception - ${AWS::StackName}",
                  "annotations": {
                    "alarms": ["${UserInfoV2VendorExceptionAlarm.Arn}"]
                     },
                  "view": "timeSeries",
                  "stacked": false
                }
              }
            ]
          }

  ConcurrencyAlarmDashboard:
    Type: AWS::CloudWatch::Dashboard
    Condition: "DeployAlarms"
    Properties:
      DashboardName: !Sub '${AWS::StackName}-Concurrency-Alarm-Overview'
      DashboardBody:
        Fn::Sub: >
          {
            "widgets": [
              {
                "height": 6,
                  "width": 12,
                  "y": 0,
                  "x": 0,
                  "type": "metric",
                  "properties": {
                    "title": "Verify Authorize 80% Concurrency - ${AWS::StackName}",
                    "annotations": {
                      "alarms": ["${VerifyAuthorizeRequestConcurrency80Alarm.Arn}"]
                    },
                    "view": "timeSeries",
                    "stacked": false
                  }
                },
                {
                  "height": 6,
                  "width": 12,
                  "y": 0,
                  "x": 12,
                  "type": "metric",
                  "properties": {
                    "title": "Get Redirect 80% Concurrency - ${AWS::StackName}",
                    "annotations": {
                      "alarms": ["${GetRedirectConcurrency80Alarm.Arn}"]
                    },
                    "view": "timeSeries",
                    "stacked": false
                  }
                },
                {
                  "height": 6,
                  "width": 12,
                  "y": 6,
                  "x": 0,
                  "type": "metric",
                  "properties": {
                    "title": "Issue Access Token 80% Concurrency - ${AWS::StackName}",
                    "annotations": {
                      "alarms": ["${IssueAccessTokenConcurrency80Alarm.Arn}"]
                    },
                    "view": "timeSeries",
                    "stacked": false
                  }
                },
                {
                  "height": 6,
                  "width": 12,
                  "y": 6,
                  "x": 12,
                  "type": "metric",
                  "properties": {
                    "title": "User Info 80% Concurrency - ${AWS::StackName}",
                    "annotations": {
                      "alarms": ["${UserInfoConcurrency80Alarm.Arn}"]
                    },
                    "view": "timeSeries",
                    "stacked": false
                  }
                },
                {
                  "height": 6,
                  "width": 12,
                  "y": 12,
                  "x": 0,
                  "type": "metric",
                  "properties": {
                    "title": "Fetch Bio Token 80% Concurrency - ${AWS::StackName}",
                    "annotations": {
                      "alarms": ["${FetchBiometricTokenConcurrency80Alarm.Arn}"]
                    },
                    "view": "timeSeries",
                    "stacked": false
                  }
                },
                {
                  "height": 6,
                  "width": 12,
                  "y": 12,
                  "x": 12,
                  "type": "metric",
                  "properties": {
                    "title": "Finish Bio Session 80% Concurrency - ${AWS::StackName}",
                    "annotations": {
                      "alarms": ["${FinishBiometricSession2Concurrency80Alarm.Arn}"]
                    },
                    "view": "timeSeries",
                    "stacked": false
                  }
                },
                {
                  "height": 6,
                  "width": 12,
                  "y": 18,
                  "x": 0,
                  "type": "metric",
                  "properties": {
                    "title": "User Abort Command 80% Concurrency - ${AWS::StackName}",
                    "annotations": {
                      "alarms": ["${UserAbortCommandConcurrency80Alarm.Arn}"]
                    },
                    "view": "timeSeries",
                    "stacked": false
                  }
                },
                {
                  "height": 6,
                  "width": 12,
                  "y": 18,
                  "x": 12,
                  "type": "metric",
                  "properties": {
                    "title": "App Info 80% Concurrency - ${AWS::StackName}",
                    "annotations": {
                      "alarms": ["${AppInfoConcurrency80Alarm.Arn}"]
                    },
                    "view": "timeSeries",
                    "stacked": false
                  }
                },
                {
                  "height": 6,
                  "width": 12,
                  "y": 24,
                  "x": 0,
                  "type": "metric",
                  "properties": {
                    "title": "Generate Connection Code Concurrency 80 - ${AWS::StackName}",
                    "annotations": {
                      "alarms": ["${GenerateConnectionCodeConcurrency80Alarm.Arn}"]
                    },
                    "view": "timeSeries",
                    "stacked": false
                  }
                },
                {
                  "height": 6,
                  "width": 12,
                  "y": 24,
                  "x": 12,
                  "type": "metric",
                  "properties": {
                    "title": "Json Web Keys Concurrency 80 - ${AWS::StackName}",
                    "annotations": {
                      "alarms": ["${JsonWebKeysConcurrency80Alarm.Arn}"]
                    },
                    "view": "timeSeries",
                    "stacked": false
                  }
                },
                {
                  "height": 6,
                  "width": 12,
                  "y": 30,
                  "x": 0,
                  "type": "metric",
                  "properties": {
                    "title": "App Info 80% Concurrency - ${AWS::StackName}",
                    "annotations": {
                      "alarms": ["${OpenidConfigurationConcurrency80Alarm.Arn}"]
                    },
                    "view": "timeSeries",
                    "stacked": false
                  }
                }
              ]
            }

# MetricFilters

Outputs:
  CICApiGatewayId:
    Description: "API GatewayID of the CIC CRI API"
    Value: !Sub "${CICRestApi}"
    Export:
      Name: !Sub ${AWS::StackName}-CICApiGatewayId
  CICBackendURL:
    Description: "CIC Backend URL"
    Value: !Sub
      - "https://api-${AWS::StackName}.${DNSSUFFIX}/"
      - DNSSUFFIX:
          !FindInMap [ EnvironmentVariables, !Ref Environment, DNSSUFFIX ]
    Export:
      Name: !Sub ${AWS::StackName}-CICBackendURL
  CICIPVStubExecuteURL:
    Description: "CIC IPV Stub"
    Value:
      Fn::ImportValue: !Sub '${IPVStubStackName}-IPVStubExecuteUrl'